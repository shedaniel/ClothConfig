plugins {
    id "architectury-plugin" version "3.1-SNAPSHOT"
    id "forgified-fabric-loom" version "0.6-SNAPSHOT" apply false
    id "com.matthewprenger.cursegradle" version "1.4.0" apply false
    id "maven-publish"
    id "org.cadixdev.licenser" version "0.5.0" apply false
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "forgified-fabric-loom"

    loom {
        silentMojangMappingsLicense()
        useFabricMixin = true
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'architectury-plugin'
    apply plugin: 'org.cadixdev.licenser'

    def runNumber = (System.getenv("GITHUB_RUN_NUMBER") == null ? "9999" : System.getenv("GITHUB_RUN_NUMBER"))

    version = rootProject.base_version + "." + runNumber
    archivesBaseName = rootProject.archives_base_name

    group = rootProject.maven_group

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"

        // The Minecraft launcher currently installs Java 8 for users, so your mod probably wants to target Java 8 too
        // JDK 9 introduced a new way of specifying this that will make sure no newer classes or methods are used.
        // We'll use that if it's available, but otherwise we'll use the older option.
        def targetVersion = 8
        if (JavaVersion.current().isJava9Compatible()) {
            options.release = targetVersion
        }
    }

    license {
        header = rootProject.file("HEADER")

        ext {
            name = "shedaniel"
            year = "2020 - 2021"
        }

        include "**/*.java"
        exclude "**/ScrollingContainer.java"

        ignoreFailures = true
    }

    javadoc {
        options.source = 8

        options.tags = [
            "apiNote:a:API Note:",
            "implSpec:a:Implementation Requirements:",
            "implNote:a:Implementation Note:"
        ]

        options.links = [
            'https://docs.oracle.com/javase/8/docs/api/'
        ]

        options.group('AutoConfig', ['me.shedaniel.autoconfig', 'me.shedaniel.autoconfig.*'])
        options.group('Cloth Config', ['me.shedaniel.clothconfig2', 'me.shedaniel.clothconfig2.*'])
    }
}

task licenseFormatAll
subprojects { licenseFormatAll.dependsOn("${path}:licenseFormat") }

task curseforgePublish
